{{ if eq .chezmoi.os "windows" -}}
{{ template "shell_logger" . -}}

function IsScoopInstalled {
  
  param (
    [string]$bucket,
    [string]$app
  )

  scoop list $app 6>$null | ForEach-Object {
    if ($_.Source -eq $bucket -and $_.Name -eq $app) {
      return "true"
    }
  }

  return "false"
}



{{ range $id, $options := .windows.packages }}{{ if $options.enable }}{{ if eq $id "scoop" -}}
$bucketNames = scoop bucket list | ForEach-Object { $_.Name }
{{ range $options.options.buckets }}
if ('{{ .id }}' -in $bucketNames) {
  INFO "Bucket '{{ .id }}' is already added."
} else {
  INFO "Adding scoop bucket '{{ .id }}'..."
  {{- if eq .id .url }}
  scoop bucket add {{ .id }}
  {{- else }}
  scoop bucket add {{ .id }} {{ .url }}
  {{- end }}
}
{{ end -}}
{{ end }}{{ end }}{{ end -}}


Add-Type -AssemblyName System.Drawing
$installedFonts = (New-Object 'System.Drawing.Text.InstalledFontCollection').Families | ForEach-Object { $_.Name }
{{ range $id, $options := .windows.packages }}{{ if eq $options.type "scoop" }}{{ if $options.enable -}}
{{ if eq .checker.type "command" -}}
if (Get-Command {{ .checker.command }} -ErrorAction SilentlyContinue) {
{{ else if eq .checker.type "font" -}}
if ('{{ .checker.font }}' -in $installedFonts) {
{{ else if eq .checker.type "script" -}}
if ({{ .checker.script }}) {
{{ else if eq .checker.type "scoop-apps" -}}
if ((IsScoopInstalled -bucket "{{ .checker.bucket }}" -app "{{ .checker.app }}" -ErrorAction SilentlyContinue) -eq "true") {
{{ else }}
FATAL "Unsupported checker type '{{ .checker.type }}' for '{{ $id }}'."
{{ end -}}
  INFO "'{{ $id }}' is already installed."
} else {
  INFO "Installing '{{ $id }}'..."
  scoop install {{ $id }}
}
{{ end }}{{ end }}{{ end -}}


{{ end -}}