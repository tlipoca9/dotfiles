{{ define "script_checker" -}}
script_checker_exitcode=1
set +e
{{ if eq .checker.type "command" -}}
command -v {{ .checker.command }} >/dev/null 2>&1
{{ else if eq .checker.type "script" -}}
{{ .checker.script }}
{{ end -}}
script_checker_exitcode=$?
set -e
{{ end -}}

{{ define "homebrew_checker" -}}
homebrew_checker_exitcode=1
set +e
{{ if eq .checker.type "command" -}}
command -v {{ .checker.command }} >/dev/null 2>&1
{{ else if eq .checker.type "cask" -}}
echo $homebrew_casks | sed 's/ /\n/g' | grep -E '^{{ .checker.cask }}$' > /dev/null 2>&1
{{ else if eq .checker.type "script" -}}
{{ .checker.script }}
{{ end -}}
homebrew_checker_exitcode=$?
set -e
{{ end -}}


{{ if eq .chezmoi.os "darwin" -}}
#!/usr/bin/env bash
set -euo pipefail
{{ template "shell_logger" . -}}

## `script` type
{{ range $id, $options := .darwin.packages }}{{ if eq $options.type "script" }}{{ if $options.enable -}}
{{ template "script_checker" $options -}}
if [[ $script_checker_exitcode -ne 0 ]]; then
  INFO "Installing '{{ $id }}'..."
  {{ $options.installer }}
  {{- if $options.post_install }}
  {{ $options.post_install }}
  {{- end }}
else
  INFO "'{{ $id }}' is already installed."
fi
{{ end }}{{ end }}{{ end -}}


## `homebrew` type
homebrew_checker_exitcode=1
set -e
command -v brew >/dev/null 2>&1
homebrew_checker_exitcode=$?
set +e

if [[ $homebrew_checker_exitcode -ne 0 ]]; then
  INFO "'homebrew' is not installed, so skipping the installation of homebrew packages."
else
homebrew_casks=$(brew list --cask)
{{ range $id, $options := .darwin.packages }}{{ if eq $options.type "homebrew" }}{{ if $options.enable -}}
{{ template "homebrew_checker" $options -}}
if [[ $homebrew_checker_exitcode -ne 0 ]]; then
  INFO "Installing '{{ $id }}'..."
  {{- if eq $options.installer.type "formula" }}
  brew install {{ $id }}
  {{- else if eq $options.installer.type "cask" }}
  brew install --cask {{ $id }}
  {{- else }}
  ERROR "Unsupported installer type '{{ $options.installer.type }}' for '{{ $id }}'."
  {{- end}}
else
  INFO "'{{ $id }}' is already installed."
fi
{{ end }}{{ end }}{{ end -}}
fi


{{ end -}}