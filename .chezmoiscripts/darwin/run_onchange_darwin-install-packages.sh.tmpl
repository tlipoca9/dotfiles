{{ if eq .chezmoi.os "darwin" -}}
#!/usr/bin/env bash
set -euo pipefail

DEFAULT="\033[0;m"
RED="\033[31;m"
BLUE="\033[34;m"
YELLOW="\033[33;m"
GREEN="\033[32;m"

HINT() {
  echo -e "$GREEN====== $@ ======$DEFAULT"
}
INFO(){
  echo -e "$BLUE[INFO] $@ $DEFAULT"
}
WARN(){
  echo -e "$YELLOW[WARN] $@ $DEFAULT"
}
ERROR(){
  echo -e "$RED[ERROR] $@ $DEFAULT"
}

{{ if .packages.darwin.pkgManager -}}
HINT "package manager"
# pkgManager
{{ range .packages.darwin.pkgManager -}}
command -v {{ .cmd }} >/dev/null 2>&1 \
  && INFO "'{{ .name }}' is already installed." \
  || (INFO "Installing '{{ .name }}'..." && {{ .install_script }})
{{ end -}}
{{ end -}}


# brews
## commands
{{ if .packages.darwin.brews.commands -}}
HINT "[homebrew] commands"
{{ range .packages.darwin.brews.commands -}}
command -v {{ .cmd }} >/dev/null 2>&1 \
  && INFO "'{{ .name }}' is already installed." \
  || (INFO "Installing '{{ .name }}'..." && brew install -v {{ .name }})
{{ end -}}
{{ end -}}

## fonts
{{ if .packages.darwin.brews.fonts -}}
HINT "[homebrew] fonts"
font_family_names=$(osascript << SCPT
  use framework "AppKit"
  set fontFamilyNames to (current application's NSFontManager's sharedFontManager's availableFontFamilies) as list
  return fontFamilyNames
SCPT
)
{{ range .packages.darwin.brews.fonts -}}
(echo $font_family_names | sed 's/, /\n/g' | grep -E '^{{ .font }}$' > /dev/null 2>&1) \
  && (INFO "'{{ .font }}' is already installed.") \
  || (brew install --cask {{ .name }})
{{ end -}}
{{ end -}}

## casks
{{ if .packages.darwin.brews.casks -}}
HINT "[homebrew] casks"
brew_cask_names=$(brew list --cask)
{{ range .packages.darwin.brews.casks -}}
echo $brew_cask_names | sed 's/ /\n/g' | grep -E '^{{ range $i, $v := .aliases }}{{ if $i }}|{{end}}{{ $v }}{{ end }}$' > /dev/null 2>&1 \
  && (INFO "'{{ .name }}' is already installed.") \
  || (INFO "Installing '{{ .name }}'..." && brew install --cask {{ .name }})
{{ end -}}
{{ end -}}


{{ end -}}
