{{ if eq .chezmoi.os "linux" -}}
#!/usr/bin/env bash
set -euo pipefail

DEFAULT="\033[0;m"
RED="\033[31;m"
BLUE="\033[34;m"
YELLOW="\033[33;m"
GREEN="\033[32;m"

HINT() {
  echo -e "$GREEN====== $@ ======$DEFAULT"
}
INFO(){
  echo -e "$BLUE[INFO] $@ $DEFAULT"
}
WARN(){
  echo -e "$YELLOW[WARN] $@ $DEFAULT"
}
ERROR(){
  echo -e "$RED[ERROR] $@ $DEFAULT"
}

{{ if .packages.linux.homebrew.enabled -}}
{{ with .packages.linux.homebrew -}}
HINT "homebrew"
command -v {{ .cmd }} >/dev/null 2>&1 \
  && INFO "'homebrew' is already installed." \
  || (INFO "Installing 'homebrew'..." && {{ .install_script }})
{{ end -}}
{{ template "brew/shellenv" . -}}
{{ end -}}

{{ if .packages.linux.docker.enabled -}}
HINT "docker"
{{ range .packages.linux.docker.osRelease -}}
{{ if eq .osReleaseId $.chezmoi.osRelease.id -}}
command -v docker >/dev/null 2>&1 \
  && INFO "'docker' is already installed." \
  || (INFO "Installing 'docker'..." && {{ .install_script }})
{{ if .addUserToGroup -}}
groups | grep -q docker \
  && INFO "You are already in the 'docker' group." \
  || (INFO "Adding you to the 'docker' group..." && sudo usermod -aG docker {{ $.chezmoi.username }})
{{ end -}}
{{ end -}}
{{ end -}}
{{ end -}}

# brews
## commands
{{ if .packages.linux.brews.commands -}}
HINT "[homebrew] commands"
{{ range .packages.linux.brews.commands -}}
command -v {{ .cmd }} >/dev/null 2>&1 \
  && INFO "'{{ .name }}' is already installed." \
  || (INFO "Installing '{{ .name }}'..." && brew install -v {{ .name }})
{{ end -}}
{{ end -}}


{{ end -}}
